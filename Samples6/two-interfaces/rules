#
# Shorewall6 version 4.0 - Sample Rules File for two-interface configuration.
# Copyright (C) 2006-2008 by the Shorewall Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# See the file README.txt for further details.
#------------------------------------------------------------------------------
# For information about entries in this file, type "man shorewall6-rules"
#############################################################################################################
#           
#    Entries in this file govern connection establishment by
#    defining exceptions to the policies layed out in
#    shorewall6-policy(5). By default, subsequent requests and
#    responses are automatically allowed using connection tracking.
#    For any particular (source,dest) pair of zones, the rules are
#    evaluated in the order in which they appear in this file and
#    the first terminating match is the one that determines the
#    disposition of the request. All rules are terminating except
#    LOG and QUEUE rules.
#           
#    The rules file is divided into sections. Each section is
#    introduced by a "Section Header" which is a line beginning with
#    SECTION and followed by the section name.
#           
#    Sections are as follows and must appear in the order listed:
#           
#    ESTABLISHED
#           Packets in the ESTABLISHED state are processed by rules
#           in this section.
#           
#           The only ACTIONs allowed in this section are ACCEPT,
#           DROP, REJECT, LOG and QUEUE
#           
#           There is an implicit ACCEPT rule inserted at the end of
#           this section.
#           
#    RELATED
#           Packets in the RELATED state are processed by rules in
#           this section.
#           
#           The only ACTIONs allowed in this section are ACCEPT,
#           DROP, REJECT, LOG and QUEUE
#           
#           There is an implicit ACCEPT rule inserted at the end of
#           this section.
#           
#    NEW
#           Packets in the NEW, INVALID and UNTRACKED states are
#           processed by rules in this section.
#           
#           Note
#           
#    If you are not familiar with Netfilter to the point where you
#    are comfortable with the differences between the various
#    connection tracking states, then it is suggested that you omit
#    the ESTABLISHED and RELATED sections and place all of your
#    rules in the NEW section (That's after the line that reads
#    SECTION NEW').
#           
#           Warning
#           
#    If you specify FASTACCEPT=Yes in shorewall6.conf(5) then the
#    ESTABLISHED and RELATED sections must be empty.
#           
#    You may omit any section that you don't need. If no Section
#    Headers appear in the file then all rules are assumed to be in
#    the NEW section.
#           
#    The columns in the file are as follows.
#           
#    ACTION -
#           {ACCEPT[+|!]|DROP[!]|REJECT[!]|DNAT[-]|SAME[-]|CONTINUE[
#           !]|LOG|QUEUE[!]|NFQUEUE[(queuenumber)]|COMMENT|action|ma
#           cro[(target)]}[:{log-level|none}[!][:tag]]
#           Specifies the action to be taken if the connection
#           request matches the rule. Must be one of the following.
#           
#         ACCEPT
#                 Allow the connection request.
#           
#         ACCEPT!
#                 like ACCEPT but exempts the rule from being
#                 suppressed by OPTIMIZE=1 in shorewall6.conf(5).
#           
#         A_ACCEPT and A_ACCEPT!
#                 Added in Shorewall 4.4.20. Audited versions of
#                 ACCEPT and ACCEPT! respectively. Require
#                 AUDIT_TARGET support in the kernel and ip6tables.
#           
#         DROP
#                 Ignore the request.
#           
#         DROP!
#                 like DROP but exempts the rule from being
#                 suppressed by OPTIMIZE=1 in shorewall6.conf(5).
#           
#         A_DROP and A_DROP!
#                 Added in Shorewall 4.4.20. Audited versions of
#                 DROP and DROP! respectively. Require AUDIT_TARGET
#                 support in the kernel and ip6tables.
#           
#         REJECT
#                 disallow the request and return an
#                 icmp-unreachable or an RST packet.
#           
#         REJECT!
#                 like REJECT but exempts the rule from being
#                 suppressed by OPTIMIZE=1 in shorewall6.conf(5).
#           
#         A_REJECT AND A_REJECT!
#                 Added in Shorewall 4.4.20. Audited versions of
#                 REJECT and REJECT! respectively. Require
#                 AUDIT_TARGET support in the kernel and ip6tables.
#           
#         CONTINUE
#                 For experts only.
#           
#                 Do not process any of the following rules for this
#                 (source zone,destination zone). If the source
#                 and/or destination IP address falls into a zone
#                 defined later in shorewall6-zones(5) or in a
#                 parent zone of the source or destination zones,
#                 then this connection request will be passed to the
#                 rules defined for that (those) zone(s). See
#                 shorewall6-nesting(5) for additional information.
#           
#         CONTINUE!
#                 like CONTINUE but exempts the rule from being
#                 suppressed by OPTIMIZE=1 in shorewall6.conf(5).
#           
#         LOG
#                 Simply log the packet and continue with the next
#                 rule.
#           
#         QUEUE
#                 Queue the packet to a user-space application such
#                 as ftwall (http://p2pwall.sf.net). The application
#                 may reinsert the packet for further processing.
#           
#         QUEUE!
#                 like QUEUE but exempts the rule from being
#                 suppressed by OPTIMIZE=1 in shorewall6.conf(5).
#           
#         NFLOG[(nflog-parameters)]
#                 queues matching packets to a backend logging
#                 daemon via a netlink socket then continues to the
#                 next rule. See
#                 http://www.shorewall.net/shorewall_logging.html.
#           
#         NFQUEUE
#                 Queues the packet to a user-space application
#                 using the nfnetlink_queue mechanism. If a
#                 queuenumber is not specified, queue zero (0) is
#                 assumed.
#           
#         NFQUEUE!
#                 like NFQUEUE but exempts the rule from being
#                 suppressed by OPTIMIZE=1 in shorewall6.conf(5).
#           
#         COMMENT
#                 the rest of the line will be attached as a comment
#                 to the Netfilter rule(s) generated by the
#                 following entries. The comment will appear
#                 delimited by "/* ... */" in the output of
#                 "shorewall6 show <chain>". To stop the comment
#                 from being attached to further rules, simply
#                 include COMMENT on a line by itself.
#           
#         action
#                 The name of an action declared in
#                 shorewall6-actions(5) or in
#                 /usr/share/shorewall6/actions.std.
#           
#         macro
#                 The name of a macro defined in a file named
#                 macro.macro. If the macro accepts an action
#                 parameter (Look at the macro source to see if it
#                 has PARAM in the TARGET column) then the macro
#                 name is followed by the parenthesized target
#                 (ACCEPT, DROP, REJECT, ...) to be substituted for
#                 the parameter.
#           
#                 Example: FTP(ACCEPT).
#           
#                 The older syntax where the macro name and the
#                 target are separated by a slash (e.g. FTP/ACCEPT)
#                 is still allowed but is deprecated.
#           
#           The ACTION may optionally be followed by ":" and a
#           syslog log level (e.g, REJECT:info or
#           Web(ACCEPT):debug). This causes the packet to be logged
#           at the specified level.
#           
#           If the ACTION names an action declared in
#           shorewall6-actions(5) or in
#           /usr/share/shorewall6/actions.std then:
#           
#           + If the log level is followed by "!' then all rules in
#             the action are logged at the log level.
#           + If the log level is not followed by "!" then only
#             those rules in the action that do not specify logging
#             are logged at the specified level.
#           + The special log level none! suppresses logging by the
#             action.
#           
#           You may also specify NFLOG (must be in upper case) as a
#           log level.This will log to the NFLOG target for routing
#           to a separate log through use of ulogd
#           (http://www.netfilter.org/projects/ulogd/index.html).
#           
#           Actions specifying logging may be followed by a log tag
#           (a string of alphanumeric characters) which is appended
#           to the string generated by the LOGPREFIX (in
#           shorewall6.conf(5)).
#           
#           Example: ACCEPT:info:ftp would include 'ftp ' at the end
#           of the log prefix generated by the LOGPREFIX setting.
#           
#    SOURCE -
#           {zone|zone-list[+]|{all|any}[+][-]}[:interface][:<{addre
#           ss-or-range[,address-or-range]...[exclusion]>|exclusion|
#           +ipset}
#           Source hosts to which the rule applies. May be a zone
#           declared in /etc/shorewall6/zones, $FW to indicate the
#           firewall itself, all, all+, all-, all+- or none.
#           
#           Beginning with Shorewall 4.4.13, you may use a zone-list
#           which consists of a comma-separated list of zones
#           declared in shorewall-zones (5). Ths zone-list may be
#           optionally followed by "+" to indicate that the rule is
#           to apply to intra-zone traffic as well as inter-zone
#           traffic.
#           
#           When none is used either in the SOURCE or DEST column,
#           the rule is ignored.
#           
#           all means "All Zones", including the firewall itself.
#           all- means "All Zones, except the firewall itself". When
#           all[-] is used either in the SOURCE or DEST column
#           intra-zone traffic is not affected. When all+[-] is
#           "used, intra-zone traffic is affected. Beginning with
#           Shorewall 4.4.13, exclusion is supported -- see see
#           shorewall6-exclusion(5).
#           
#           Except when all[+][-] or any[+][-] is specified, clients
#           may be further restricted to a list of networks and/or
#           hosts by appending ":" and a comma-separated list of
#           network and/or host addresses. Hosts may be specified by
#           IP or MAC address; mac addresses must begin with "~" and
#           must use "-" as a separator.
#           
#           any is equivalent to all when there are no nested zones.
#           When there are nested zones, any only refers to
#           top-level zones (those with no parent zones). Note that
#           any excludes all vserver zones, since those zones are
#           nested within the firewall zone.
#           
#           Hosts may also be specified as an IP address range using
#           the syntax lowaddress-highaddress. This requires that
#           your kernel and ip6tables contain iprange match support.
#           If your kernel and ip6tables have ipset match support
#           then you may give the name of an ipset prefaced by "+".
#           The ipset name may be optionally followed by a number
#           from 1 to 6 enclosed in square brackets ([]) to indicate
#           the number of levels of source bindings to be matched.
#           
#           Beginning with Shorewall6 4.4.17, the primary IP address
#           of a firewall interface can be specified by an apersand
#           ('&') followed by the logican name of the interface as
#           found in the INTERFACE column of shorewall6-interfaces
#           (5).
#           
#           When an interface is not specified, you may omit the
#           angled brackets ('<' and '>') around the address(es) or
#           you may supply them to improve readability.
#           
#           You may exclude certain hosts from the set already
#           defined through use of an exclusion (see
#           shorewall6-exclusion(5)).
#           
#           Examples:
#           
#         dmz:2002:ce7c::92b4:1::2
#                 Host 2002:ce7c:92b4:1::2 in the DMZ
#           
#         net:2001:4d48:ad51:24::/64
#                 Subnet 2001:4d48:ad51:24::/64 on the Internet
#           
#         loc:<2002:cec792b4:1::2,2002:cec792b4:1::44>
#                 Hosts 2002:cec792b4:1::2 and 2002:cec792b4:1::44
#                 in the local zone.
#           
#         loc:~00-A0-C9-15-39-78
#                 Host in the local zone with MAC address
#                 00:A0:C9:15:39:78.
#           
#         net:2001:4d48:ad51:24::/64!2001:4d48:ad51:24:6:/80!2001:4d
#                 48:ad51:24:6:/80
#                 Subnet 2001:4d48:ad51:24::/64 on the Internet
#                 except for 2001:4d48:ad51:24:6:/80.
#           
#         $FW:&eth0
#                 The primary IP address of eth0 in the firewall
#                 zone (Shorewall6 4.4.17 and later).
#           
#           Alternatively, clients may be specified by interface by
#           appending ":" to the zone name followed by the interface
#           name. For example, loc:eth1 specifies a client that
#           communicates with the firewall system through eth1. This
#           may be optionally followed by another colon (":") and an
#           IP/MAC/subnet address as described above (e.g.,
#           loc:eth1:<2002:ce7c::92b4:1::2>).
#           
#           Examples:
#           
#         loc:eth1:<2002:cec792b4:1::2,2002:cec792b4:1::44>
#                 Hosts 2002:cec792b4:1::2 and 2002:cec792b4:1::44
#                 in the Local zone, with both originating from eth1
#           
#    DEST -
#           {zone|zone-list[+]|all[+][-]}[:interface][:<{address-or-r
#           ange[,address-or-range]...[exclusion]>|exclusion|+ipset}
#           Location of Server. May be a zone declared in
#           shorewall6-zones(5), $FW to indicate the firewall
#           itself, all. all+ or none.
#           
#           Beginning with Shorewall 4.4.13, you may use a zone-list
#           which consists of a comma-separated list of zones
#           declared in shorewall-zones (5). Ths zone-list may be
#           optionally followed by "+" to indicate that the rule is
#           to apply to intra-zone traffic as well as inter-zone
#           traffic. Beginning with Shorewall-4.4.13, exclusion is
#           supported -- see see shorewall6-exclusion(5).
#           
#           Beginning with Shorewall6 4.4.17, the primary IP address
#           of a firewall interface can be specified by an apersand
#           ('&') followed by the logican name of the interface as
#           found in the INTERFACE column of shorewall6-interfaces
#           (5).
#           
#           When none is used either in the SOURCE or DEST column,
#           the rule is ignored.
#           
#           When all is used either in the SOURCE or DEST column
#           intra-zone traffic is not affected. When all+ is used,
#           intra-zone traffic is affected.
#           
#           If the DEST zone is a bport zone, then either:
#           
#          a. the SOURCE must be all[+][-], or
#          b. the SOURCE zone must be another bport zone associated
#             with the same bridge, or
#          c. the SOURCE zone must be an ipv4 zone that is
#             associated with only the same bridge.
#           
#      Except when all[+]|[-] is specified, the server may be
#      further restricted to a particular network, host or
#      interface by appending ":" and the network, host or
#      interface. See SOURCE above.
#      You may exclude certain hosts from the set already defined
#      through use of an exclusion (see shorewall6-exclusion(5)).
#      Restrictions:
#      1. MAC addresses are not allowed (this is a Netfilter
#      restriction).
#      If you kernel and ip6tables have ipset match support then
#      you may give the name of an ipset prefaced by "+". The ipset
#      name may be optionally followed by a number from 1 to 6
#      enclosed in square brackets ([]) to indicate the number of
#      levels of destination bindings to be matched. Only one of
#      the SOURCE and DEST columns may specify an ipset name.
#           
#    PROTO (Optional) -
#           {-|tcp:syn|ipp2p|ipp2p:udp|ipp2p:all|protocol-number|pro
#           tocol-name|all}
#           Protocol - ipp2p* requires ipp2p match support in your
#           kernel and ip6tables. tcp:syn implies tcp plus the SYN
#           flag must be set and the RST,ACK and FIN flags must be
#           reset.
#           
#           Beginning with Shorewall6 4.4.19, this column can
#           contain a comma-separated list of protocol-numbers
#           and/or protocol names (e.g., tcp,udp).
#           
#    DEST PORT(S) (Optional) -
#           {-|port-name-number-or-range[,port-name-number-or-range]
#           ...}
#           Destination Ports. A comma-separated list of Port names
#           (from services(5)), port numbers or port ranges; if the
#           protocol is icmp, this column is interpreted as the
#           destination icmp-type(s). ICMP types may be specified as
#           a numeric type, a numberic type and code separated by a
#           slash (e.g., 3/4), or a typename. See
#           http://www.shorewall.net/configuration_file_basics.htm#I
#           CMP. Note that prior to Shorewall6 4.4.19, only a single
#           ICMP type may be listsed.
#           
#           If the protocol is ipp2p, this column is interpreted as
#           an ipp2p option without the leading "--" (example bit
#           for bit-torrent). If no port is given, ipp2p is assumed.
#           
#           A port range is expressed as lowport:highport.
#           
#           This column is ignored if PROTO = all but must be
#           entered if any of the following columns are supplied. In
#           that case, it is suggested that this field contain a
#           dash (-).
#           
#           If your kernel contains multi-port match support, then
#           only a single Netfilter rule will be generated if in
#           this list and the CLIENT PORT(S) list below:
#           
#           1. There are 15 or less ports listed.
#           
#           2. No port ranges are included or your kernel and
#           ip6tables contain extended multiport match support.
#           
#    SOURCE PORT(S) (Optional) -
#           {-|port-name-number-or-range[,port-name-number-or-range]
#           ...}
#           Port(s) used by the client. If omitted, any source port
#           is acceptable. Specified as a comma- separated list of
#           port names, port numbers or port ranges.
#           
#           Warning
#           
#           Unless you really understand IP, you should leave this
#           column empty or place a dash (-) in the column. Most
#           people who try to use this column get it wrong.
#           
#      If you don't want to restrict client ports but need to
#      specify a later column, then place "-" in this column.
#      If your kernel contains multi-port match support, then only
#      a single Netfilter rule will be generated if in this list
#      and the DEST PORT(S) list above:
#      1. There are 15 or less ports listed.
#      2. No port ranges are included or your kernel and ip6tables
#      contain extended multiport match support.
#           
#    ORIGINAL DEST (Optional) - [-]
#           Included for compatibility with Shorewall. Enter '-' in
#           this column if you need to specify one of the later
#           columns.
#           
#    RATE LIMIT (Optional) -
#           [-|[{s|d}:[[name]:]]]rate/{sec|min|hour|day}[:burst]
#           You may rate-limit the rule by placing a value in this
#           column:
#           
#           rate is the number of connections per interval (sec or
#           min) and burst is the largest burst permitted. If no
#           burst is given, a value of 5 is assumed. There may be no
#           no whitespace embedded in the specification.
#           
#           Example: 10/sec:20
#           
#           When s: or d: is specified, the rate applies per source
#           IP address or per destination IP address respectively.
#           The name may be chosen by the user and specifies a hash
#           table to be used to count matching connections. If not
#           given, the name shorewallN (where N is a unique integer)
#           is assumed. Where more than one POLICY specifies the
#           same name, the connections counts for the rules are
#           aggregated and the individual rates apply to the
#           aggregated count.
#           
#    USER/GROUP (Optional) -
#           [!][user-name-or-number][:group-name-or-number]
#           This column may only be non-empty if the SOURCE is the
#           firewall itself.
#           
#           When this column is non-empty, the rule applies only if
#           the program generating the output is running under the
#           effective user and/or group specified (or is NOT running
#           under that id if "!" is given).
#           
#           Examples:
#           
#         joe
#                 program must be run by joe
#           
#         :kids
#                 program must be run by a member of the 'kids'
#                 group
#           
#         !:kids
#                 program must not be run by a member of the 'kids'
#                 group
#           
#    MARK - [!]value[/mask][:C]
#           Defines a test on the existing packet or connection
#           mark. The rule will match only if the test returns true.
#           
#           If you don't want to define a test but need to specify
#           anything in the following columns, place a "-" in this
#           field.
#           
#         !
#                 Inverts the test (not equal)
#           
#         value
#                 Value of the packet or connection mark.
#           
#         mask
#                 A mask to be applied to the mark before testing.
#           
#         :C
#                 Designates a connection mark. If omitted, the
#                 packet mark's value is tested.
#           
#    CONNLIMIT - [!]limit[:mask]
#           May be used to limit the number of simultaneous
#           connections from each individual host to limit
#           connections. Requires connlimit match in your kernel and
#           ip6tables. While the limit is only checked on rules
#           specifying CONNLIMIT, the number of current connections
#           is calculated over all current connections from the
#           SOURCE host. By default, the limit is applied to each
#           host but can be made to apply to networks of hosts by
#           specifying a mask. The mask specifies the width of a
#           VLSM mask to be applied to the source address; the
#           number of current connections is then taken over all
#           hosts in the subnet source-address/mask. When ! is
#           specified, the rule matches when the number of
#           connection exceeds the limit.
#           
#    TIME - timeelement[&timelement...]
#           May be used to limit the rule to a particular time
#           period each day, to particular days of the week or
#           month, or to a range defined by dates and times.
#           Requires time match support in your kernel and
#           ip6tables.
#           
#           timeelement may be:
#           
#         timestart=hh:mm[:ss]
#                 Defines the starting time of day.
#           
#         timestop=hh:mm[:ss]
#                 Defines the ending time of day.
#           
#         utc
#                 Times are expressed in Greenwich Mean Time.
#           
#         localtz
#                 Times are expressed in Local Civil Time (default).
#           
#         weekdays=ddd[,ddd]...
#                 where ddd is one of Mon, Tue, Wed, Thu, Fri, Sat
#                 or Sun
#           
#         monthdays=dd[,dd],...
#                 where dd is an ordinal day of the month
#           
#         datestart=yyyy[-mm[-dd[Thh[:mm[:ss]]]]]
#                 Defines the starting date and time.
#           
#         datestop=yyyy[-mm[-dd[Thh[:mm[:ss]]]]]
#                 Defines the ending date and time.
#           
#    HEADERS - [!][any:|exactly:]header-list (Optional - Added in
#           Shorewall 4.4.15)
#           The header-list consists of a comma-separated list of
#           headers from the following list.
#           
#         auth, ah, or 51
#                 Authentication Headers extension header.
#           
#         esp, or 50
#                 Encrypted Security Payload extension header.
#           
#         hop, hop-by-hop or 0
#                 Hop-by-hop options extension header.
#           
#         route, ipv6-route or 41
#                 IPv6 Route extension header.
#           
#         frag, ipv6-frag or 44
#                 IPv6 fragmentation extension header.
#           
#         none, ipv6-nonxt or 59
#                 No next header
#           
#         proto, protocol or 255
#                 Any protocol header.
#           
#           If any: is specified, the rule will match if any of the
#           listed headers are present. If exactly: is specified,
#           the will match packets that exactly include all
#           specified headers. If neither is given, any: is assumed.
#           
#           If ! is entered, the rule will match those packets which
#           would not be matched when ! is omitted.
#           
#           Example
#           
#    Example 1:
#           Accept SMTP requests from the DMZ to the internet
#           
#          #ACTION SOURCE  DEST PROTO      DEST    SOURCE  ORIGINAL
#          #                               PORT    PORT(S) DEST
#          ACCEPT  dmz     net       tcp   smtp
#           
#    Example 4:
#           You want to accept SSH connections to your firewall only
#           from internet IP addresses 2002:ce7c::92b4:1::2 and
#           2002:ce7c::92b4:1::22
#           
#         #ACTION  SOURCE DEST            PROTO   DEST    SOURCE  ORIGINAL
#         #                                       PORT    PORT(S) DEST
#         ACCEPT   net:<2002:ce7c::92b4:1::2,2002:ce7c::92b4:1::22> \
#                         $FW              tcp     22
#           
#    Example 5:
#           You wish to limit SSH connections from remote systems to
#           1/min with a burst of three (to allow for limited
#           retry):
#           
#         #ACTION     SOURCE          DEST       PROTO       DEST
#           SOURCE    ORIGINAL         RATE
#         #                                                  PORT(S)
#           PORT(S)   DEST             LIMIT
#         SSH(ACCEPT) net             all        -           -
#           -         -                s:1/min:3
#           
#############################################################################################################
#ACTION		SOURCE		DEST		PROTO	DEST	SOURCE		ORIGINAL	RATE		USER/	MARK
#							PORT	PORT(S)		DEST		LIMIT		GROUP
#
#	Accept DNS connections from the firewall to the network
#
DNS(ACCEPT)	$FW		net
#
#	Accept SSH connections from the local network for administration
#
SSH(ACCEPT)	loc		$FW
#
#	Allow Ping from the local network
#
Ping(ACCEPT)	loc		$FW
#
# Drop Ping from the "bad" net zone.. and prevent your log from being flooded..
#
Ping(DROP)	net		$FW
ACCEPT		$FW		loc		ipv6-icmp
ACCEPT		$FW		net		ipv6-icmp
#
